header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
ode2KA <- "
d/dt(abs)    = -KA*abs;
d/dt(centr)  =  KA*abs+K21*periph-K12*centr-K10*centr;
d/dt(periph) =        -K21*periph+K12*centr;
"
mypar8 <- function(lCL, lV, lCLD, lVT, lKA)
{
CL <- exp(lCL)
V  <- exp(lV)
CLD <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K10 <- CL / V
K12 <- CLD / V
K21 <- CLD / VT
}
specs8 <-
list(
fixed = lCL + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lCL + lV + lCLD + lVT + lKA ~ 1),
start = c(
lCL = 1.6,
lV = 4.5,
lCLD = 1.5,
lVT = 3.9,
lKA = 0.1
)
)
runno <- "N063"
dat <- datr
fitODE <-
nlme_ode(
dat,
model = ode2KA,
par_model = specs8,
par_trans = mypar8,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .3, msVerbose = TRUE)
)
z <- VarCorr(fitODE)
signif(as.numeric(fitODE$logLik),6)
signif(AIC(fitODE), 6)
signif(BIC(fitODE), 6)
signif(as.numeric(fitODE$coefficients$fixed[1]),3)
signif(as.numeric(fitODE$coefficients$fixed[2]),3)
signif(as.numeric(fitODE$coefficients$fixed[3]),3)
signif(as.numeric(fitODE$coefficients$fixed[4]),3)
signif(as.numeric(fitODE$coefficients$fixed[5]),3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(fit$sigma, 3)
datr <- read.csv("ORAL_2CPT.csv",
header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
datSS <- datr[SS == 0]
datSD <- datr[SS == 1]
#general solution to allow different times of SS dose and different II values per subject:
datSSD <- datr[SS == 1, .(ID, TIME, II)]
nvar <- function(TIME, II) {
for (i in seq(1, 7)) {
r = TIME - (i - 1) * II
assign(paste("ret", i, sep = ""), r)
}
return(list(
r1 = ret1,
r2 = ret2,
r3 = ret3,
r4 = ret4,
r5 = ret5,
r6 = ret6,
r7 = ret7
))
}
#updates datSSD with 7 columns to account for the new dosing times
datSSD[, (paste("V", seq(1, 7) - 1, sep = "")) := nvar(TIME, II)][, TIME :=
NULL][, II := NULL]
index <- melt(datSSD, id.vars = "ID", value.name = "TIMED")
index[, variable := NULL]
index <- index[TIMED > 0]
#much easier solution if you know the time of SS dose and the II and if it is the same for all
#index<-CJ(ID=datSSD$ID,TIMED=seq(192,0,-24))
datSD2 <- merge(datSD, index, by = c("ID"), all = TRUE)
datSD2[, TIME := TIMED][, TIMED := NULL]
datSS <- rbind(datSS, datSD2)
setkey(datSS, ID, TIME)
dat <- datSS
specs8i <-
list(
fixed = lCL + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(value = diag(c(6, 6, 6, 6, 6)), form = lCL + lV + lCLD +
lVT + lKA ~ 1),
start = c(
lCL = 1.4,
lV = 4.2,
lCLD = 1.3,
lVT = 3.9,
lKA = 0.1
)
)
runno <- "N062"
ode2KA <- "
d/dt(abs)    = -KA*abs;
d/dt(centr)  =  KA*abs+K21*periph-K12*centr-K10*centr;
d/dt(periph) =        -K21*periph+K12*centr;
"
mypar8 <- function(lCL, lV, lCLD, lVT, lKA)
{
CL <- exp(lCL)
V  <- exp(lV)
CLD <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K10 <- CL / V
K12 <- CLD / V
K21 <- CLD / VT
}
fit <-
nlme_lin_cmpt(
dat,
par_model = specs8i,
ncmt = 2,
verbose = TRUE,
oral = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .15, msVerbose = TRUE)
)
z <- VarCorr(fit)
signif(as.numeric(fit$logLik),6)
signif(AIC(fit), 6)
signif(BIC(fit), 6)
signif(as.numeric(fit$coefficients$fixed[1]),3)
signif(as.numeric(fit$coefficients$fixed[2]),3)
signif(as.numeric(fit$coefficients$fixed[3]),3)
signif(as.numeric(fit$coefficients$fixed[4]),3)
signif(as.numeric(fit$coefficients$fixed[5]),3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(fit$sigma, 3)
datr <- read.csv("ORAL_2CPT.csv",
header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
datSS <- datr[SS == 0]
datSD <- datr[SS == 1]
#general solution to allow different times of SS dose and different II values per subject:
datSSD <- datr[SS == 1, .(ID, TIME, II)]
nvar <- function(TIME, II) {
for (i in seq(1, 7)) {
r = TIME - (i - 1) * II
assign(paste("ret", i, sep = ""), r)
}
return(list(
r1 = ret1,
r2 = ret2,
r3 = ret3,
r4 = ret4,
r5 = ret5,
r6 = ret6,
r7 = ret7
))
}
#updates datSSD with 7 columns to account for the new dosing times
datSSD[, (paste("V", seq(1, 7) - 1, sep = "")) := nvar(TIME, II)][, TIME :=
NULL][, II := NULL]
index <- melt(datSSD, id.vars = "ID", value.name = "TIMED")
index[, variable := NULL]
index <- index[TIMED > 0]
#much easier solution if you know the time of SS dose and the II and if it is the same for all
#index<-CJ(ID=datSSD$ID,TIMED=seq(192,0,-24))
datSD2 <- merge(datSD, index, by = c("ID"), all = TRUE)
datSD2[, TIME := TIMED][, TIMED := NULL]
datSS <- rbind(datSS, datSD2)
setkey(datSS, ID, TIME)
dat <- datSS
specs8i <-
list(
fixed = lCL + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(value = diag(c(6, 6, 6, 6, 6)), form = lCL + lV + lCLD +
lVT + lKA ~ 1),
start = c(
lCL = 1.4,
lV = 4.2,
lCLD = 1.3,
lVT = 3.9,
lKA = 0.1
)
)
runno <- "N062"
ode2KA <- "
d/dt(abs)    = -KA*abs;
d/dt(centr)  =  KA*abs+K21*periph-K12*centr-K10*centr;
d/dt(periph) =        -K21*periph+K12*centr;
"
mypar8 <- function(lCL, lV, lCLD, lVT, lKA)
{
CL <- exp(lCL)
V  <- exp(lV)
CLD <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K10 <- CL / V
K12 <- CLD / V
K21 <- CLD / VT
}
fitODE <-
nlme_ode(
dat,
model = ode2KA,
par_model = specs8i,
par_trans = mypar8,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .15, msVerbose = TRUE)
)
z <- VarCorr(fitODE)
signif(as.numeric(fitODE$logLik),6)
signif(AIC(fitODE), 6)
signif(BIC(fitODE), 6)
signif(as.numeric(fitODE$coefficients$fixed[1]),3)
signif(as.numeric(fitODE$coefficients$fixed[2]),3)
signif(as.numeric(fitODE$coefficients$fixed[3]),3)
signif(as.numeric(fitODE$coefficients$fixed[4]),3)
signif(as.numeric(fitODE$coefficients$fixed[5]),3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(fit$sigma, 3)
datr <-
read.csv("ORAL_2CPTMM.csv",
header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
ode2MMKA <- "
d/dt(abs)    =-KA*abs;
d/dt(centr)  = KA*abs+K21*periph-K12*centr-(VM*centr/V)/(KM+centr/V);
d/dt(periph) =-K21*periph+K12*centr;
"
mypar9 <- function(lVM, lKM, lV, lCLD, lVT, lKA)
{
VM <- exp(lVM)
KM <- exp(lKM)
V <- exp(lV)
CLD  <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K12 <- CLD / V
K21 <- CLD / VT
}
specs9 <-
list(
fixed = lVM + lKM + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lVM + lKM + lV + lCLD + lVT + lKA ~ 1),
start = c(
lVM = 7,
lKM = 6,
lV = 4,
lCLD = 1.5,
lVT = 4,
lKA = 0.1
)
)
runno <- "N068"
dat <- datr[SD == 1]
fit <-
nlme_ode(
dat,
model = ode2MMKA,
par_model = specs9,
par_trans = mypar9,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .1, msVerbose = TRUE)
)
z <- VarCorr(fit)
specs9 <-
list(
fixed = lVM + lKM + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lVM + lKM + lV + lCLD + lVT + lKA ~ 1),
start = c(
lVM = 7.3,
lKM = 6.1,
lV = 4.3,
lCLD = 1.4,
lVT = 3.75,
lKA = -0.01
)
)
runno <- "N068"
dat <- datr[SD == 1]
fit <-
nlme_ode(
dat,
model = ode2MMKA,
par_model = specs9,
par_trans = mypar9,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .1, msVerbose = TRUE)
)
z <- VarCorr(fit)
signif(as.numeric(fit$logLik), 6)
signif(AIC(fit), 6)
signif(BIC(fit), 6)
signif(as.numeric(fit$coefficients$fixed[1]), 3)
signif(as.numeric(fit$coefficients$fixed[2]), 3)
signif(as.numeric(fit$coefficients$fixed[3]), 3)
signif(as.numeric(fit$coefficients$fixed[4]), 3)
signif(as.numeric(fit$coefficients$fixed[5]), 3)
signif(as.numeric(fit$coefficients$fixed[6]), 3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(as.numeric(z[6, "StdDev"]), 3)
signif(fit$sigma, 3)
datr <-
read.csv("ORAL_2CPTMM.csv",
header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
ode2MMKA <- "
d/dt(abs)    =-KA*abs;
d/dt(centr)  = KA*abs+K21*periph-K12*centr-(VM*centr/V)/(KM+centr/V);
d/dt(periph) =-K21*periph+K12*centr;
"
mypar9 <- function(lVM, lKM, lV, lCLD, lVT, lKA)
{
VM <- exp(lVM)
KM <- exp(lKM)
V <- exp(lV)
CLD  <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K12 <- CLD / V
K21 <- CLD / VT
}
specs9 <-
list(
fixed = lVM + lKM + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lVM + lKM + lV + lCLD + lVT + lKA ~ 1),
start = c(
lVM = 7.3,
lKM = 6.1,
lV = 4.3,
lCLD = 1.4,
lVT = 3.75,
lKA = -0.01
)
)
runno <- "N068"
dat <- datr[SD == 0]
fit <-
nlme_ode(
dat,
model = ode2MMKA,
par_model = specs9,
par_trans = mypar9,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .1, msVerbose = TRUE)
)
z <- VarCorr(fit)
specs9 <-
list(
fixed = lVM + lKM + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lVM + lKM + lV + lCLD + lVT + lKA ~ 1),
start = c(
lVM = 7,
lKM = 6,
lV = 4,
lCLD = 1.5,
lVT = 4,
lKA = 0.1
)
)
runno <- "N068"
dat <- datr[SD == 0]
fit <-
nlme_ode(
dat,
model = ode2MMKA,
par_model = specs9,
par_trans = mypar9,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .1, msVerbose = TRUE)
)
z <- VarCorr(fit)
signif(as.numeric(fit$logLik), 6)
signif(AIC(fit), 6)
signif(BIC(fit), 6)
signif(as.numeric(fit$coefficients$fixed[1]), 3)
signif(as.numeric(fit$coefficients$fixed[2]), 3)
signif(as.numeric(fit$coefficients$fixed[3]), 3)
signif(as.numeric(fit$coefficients$fixed[4]), 3)
signif(as.numeric(fit$coefficients$fixed[5]), 3)
signif(as.numeric(fit$coefficients$fixed[6]), 3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(as.numeric(z[6, "StdDev"]), 3)
signif(fit$sigma, 3)
datr <-
read.csv("ORAL_2CPTMM.csv",
header = TRUE,
stringsAsFactors = F)
datr$EVID <- ifelse(datr$EVID == 1, 101, datr$EVID)
datr <- data.table(datr)
datr <- datr[EVID != 2]
ode2MMKA <- "
d/dt(abs)    =-KA*abs;
d/dt(centr)  = KA*abs+K21*periph-K12*centr-(VM*centr/V)/(KM+centr/V);
d/dt(periph) =-K21*periph+K12*centr;
"
mypar9 <- function(lVM, lKM, lV, lCLD, lVT, lKA)
{
VM <- exp(lVM)
KM <- exp(lKM)
V <- exp(lV)
CLD  <- exp(lCLD)
VT <- exp(lVT)
KA <- exp(lKA)
K12 <- CLD / V
K21 <- CLD / VT
}
specs9 <-
list(
fixed = lVM + lKM + lV + lCLD + lVT + lKA ~ 1,
random = pdDiag(lVM + lKM + lV + lCLD + lVT + lKA ~ 1),
start = c(
lVM = 7,
lKM = 6,
lV = 4,
lCLD = 1.5,
lVT = 4,
lKA = 0.1
)
)
runno <- "N070"
dat <- datr
fit <-
nlme_ode(
dat,
model = ode2MMKA,
par_model = specs9,
par_trans = mypar9,
response = "centr",
response.scaler = "V",
verbose = TRUE,
weight = varPower(fixed = c(1)),
control = nlmeControl(pnlsTol = .1, msVerbose = TRUE)
)
z <- VarCorr(fit)
signif(as.numeric(fit$logLik), 6)
signif(AIC(fit), 6)
signif(BIC(fit), 6)
signif(as.numeric(fit$coefficients$fixed[1]), 3)
signif(as.numeric(fit$coefficients$fixed[2]), 3)
signif(as.numeric(fit$coefficients$fixed[3]), 3)
signif(as.numeric(fit$coefficients$fixed[4]), 3)
signif(as.numeric(fit$coefficients$fixed[5]), 3)
signif(as.numeric(fit$coefficients$fixed[6]), 3)
signif(as.numeric(z[1, "StdDev"]), 3)
signif(as.numeric(z[2, "StdDev"]), 3)
signif(as.numeric(z[3, "StdDev"]), 3)
signif(as.numeric(z[4, "StdDev"]), 3)
signif(as.numeric(z[5, "StdDev"]), 3)
signif(as.numeric(z[6, "StdDev"]), 3)
signif(fit$sigma, 3)
?Sys.setenv
library(testthat)
library(nlmixr)
Sys.setenv("NLMIXR_VALIDATION")
test_check("nlmixr")
